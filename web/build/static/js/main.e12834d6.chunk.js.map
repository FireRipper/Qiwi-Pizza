{"version":3,"sources":["images/logo-qiwi/logo.svg","components/header/header.js","components/header/index.js","components/footer/index.js","components/footer/footer.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","actions/product-actions.js","actions/choose-menu-actions.js","types/types.js","components/button-order-product/index.js","components/button-order-product/button-order-product.js","components/total-cost-product/index.js","components/total-cost-product/total-cost-product.js","actions/order-list-actions.js","components/choose-weight-product/choose-weight-product.js","components/choose-weight-product/index.js","components/choose-quantity-product/choose-quantity-product.js","components/choose-quantity-product/index.js","images/no-photo/no-photo-2-var/no-photo-var2-570px.png","utils/compose.js","utils/transform-data.js","components/product-service-context/product-service-context.js","components/hoc/with-product-service.js","components/card-list-items/card-list-items.js","components/card-list-items/index.js","components/order-list-products/order-list-products.js","components/order-list-products/index.js","components/card-list/index.js","components/card-list/card-list.js","components/pages/home-page/index.js","components/pages/home-page/home-page.js","components/pages/about-page/about-page.js","components/pages/about-page/index.js","components/pages/contact-page/index.js","components/pages/contact-page/contact-page.js","components/pages/404-page/index.js","components/pages/404-page/page-not-found.js","components/pages/delivery-page/delivery-page.js","components/pages/delivery-page/index.js","components/app/index.js","components/app/app.js","components/error-boundary/index.js","components/error-boundary/error-boundary.js","services/data-products/data.js","reducers/product-reducer.js","reducers/choose-menu-reducer.js","reducers/order-list/update-list.js","reducers/order-list/update-total.js","reducers/order-list/update-order-list-products.js","reducers/order-list/update-value-radio-btn-in-list.js","reducers/order-list/update-count-and-total-in-list.js","reducers/order-list/remove-product-from-list.js","reducers/order-list/order-list-reducer.js","reducers/index.js","store.js","index.js","services/product-service.js"],"names":["Header","menuItems","key","link","icon","faPizzaSlice","label","faInfoCircle","faAddressCard","faTruck","this","map","Item","to","totalItems","props","Fragment","className","type","align","xs","sm","md","lg","xl","span","push","src","logo","alt","mode","renderMenuItem","offset","count","faShoppingBasket","Component","connect","orderList","Footer","SmileOutlined","ErrorIndicator","justify","status","title","subTitle","extra","href","fetchProducts","productService","dispatch","getAllSalads","then","data","payload","catch","err","ButtonOrderProduct","onAddedToList","onClick","faCartPlus","TotalCostProduct","chooseMenu","productChooseMenu","id","totalId","addonBefore","value","totalCost","Option","Select","ChooseWeightProduct","onSelect","val","menuId","selectWeightProduct","chooseId","smallCost","smallDesc","mediumCost","mediumDesc","largeCost","largeDesc","oneCost","doubleCost","oneWeight","doubleWeight","faBalanceScaleRight","defaultValue","selectValue","onChange","renderChoose","ChooseQuantityProduct","numbers","onSelectQuantity","selectQuantityProduct","quantityId","renderOption","num","faPlusCircle","selectedNumberValue","compose","funcs","comp","reduceRight","wrapped","f","_transformPizzaAndSalads","item","description","_transformData","createContext","ProductServiceProvider","Provider","ProductServiceConsumer","Consumer","withProductService","Wrapped","Meta","Card","CardListItems","renderProducts","arr","hoverable","cover","noPhoto","products","loading","error","size","React","productList","Title","Typography","OrderListProducts","items","list","totalPrice","onIncrease","onDecrease","onDeleteAll","onChangeRadio","e","productId","event","updateValueRadioBtnInOrderList","level","idx","total","smCount","mdCount","lgCount","smWeight","mdWeight","lgWeight","smPrice","mdPrice","lgPrice","currentValue","Group","Radio","target","disabled","MinusOutlined","PlusOutlined","DeleteOutlined","CardList","HomePage","AboutPage","aboutContet","heading","text","renderContent","ContactPage","contactInfo","colSpanXl","colSpanLg","colSpanMd","PhoneOutlined","h4","paragraph","linkLabel","pull","MailOutlined","FacebookOutlined","InstagramOutlined","rel","renderContactBlocks","PageNotFound","DeliveryPage","deliveryContent","step","infoDescr","itemLayout","dataSource","renderItem","message","showIcon","faWallet","faCreditCard","faMobileAlt","App","path","exact","component","Home","About","Contact","Delivery","render","ErrorBoundary","state","hasError","errorInfo","setState","children","_pizza","img_full","img","_salads","_combination","_buggets","updateProductList","action","undefined","generateChooseMenu","arrayLength","filledArray","Array","i","defaultCost","updateSelect","newItem","menuIndex","findIndex","menuItem","slice","updateProductChooseMenu","updateList","updateTotal","countCost","itemIndex","length","newTotal","reduce","prevVal","curVal","addProductToList","product","find","countAndCost","countProducts","defCost","selNumVal","updateListItem","updateValueRadioBtnInList","listId","radioEvent","updateCountAndTotalInList","fieldId","quantity","removeProductFromList","updateProductOrderList","Reducer","store","createStore","createPromiseProducts","methodProcessing","Promise","resolve","setTimeout","createPromiseProduct","getAllPizza","getPizza","getSalad","getAllCombination","getCombination","getAllBuggets","getBugget","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e12834d6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.1c310dae.svg\";","import { Row, Col, Menu, Badge } from 'antd'\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport logo from '../../images/logo-qiwi/logo.svg'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPizzaSlice, faTruck, faAddressCard, faInfoCircle, faShoppingBasket } from '@fortawesome/free-solid-svg-icons'\nimport { connect } from 'react-redux'\n\nimport './header.css'\n\nclass Header extends Component {\n\n    menuItems = [\n        { key: 'main', link: '/', icon: faPizzaSlice, label: 'Главная' },\n        { key: 'about', link: '/about', icon: faInfoCircle, label: 'О нас' },\n        { key: 'contact', link: '/contact', icon: faAddressCard, label: 'Контакты' },\n        { key: 'delivery', link: '/delivery', icon: faTruck, label: 'Доставка и оплата' }\n    ]\n\n    renderMenuItem() {\n        return this.menuItems.map(({ key, link, icon, label }) => {\n            return (\n                <Menu.Item key={key}>\n                    <Link to={link}>\n                        <FontAwesomeIcon icon={icon} />&nbsp;\n                        {label}\n                    </Link>\n                </Menu.Item>\n            )\n        })\n    }\n\n    render() {\n        const { totalItems } = this.props\n\n        return (\n            <React.Fragment>\n                <Row className='header' type='flex' align='middle'>\n                    <Col className=\"header-logo\" xs={12} sm={5} md={6}\n                         lg={7} xl={{ span: 5, push: 1 }}>\n                        <Link to=\"/\"><img src={logo} alt=\"logo\" /></Link>\n                    </Col>\n                    <Col xs={12} sm={16} md={14} lg={13} xl={15}>\n                        <Menu mode=\"horizontal\" className=\"header-menu\">\n                            {this.renderMenuItem()}\n                        </Menu>\n                    </Col>\n                    <Col sm={3} md={{ span: 2, offset: 2 }} lg={{ span: 3, offset: 1 }} className=\"header-basket\">\n                        <Link to=\"/\">\n                            <Badge className=\"header-basket--badge\" count={totalItems}>\n                                <FontAwesomeIcon className=\"header-basket--icon\" icon={faShoppingBasket} />\n                            </Badge>\n                        </Link>\n                    </Col>\n                </Row>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = ({ orderList: { totalItems } }) => {\n    return {\n        totalItems\n    }\n}\n\nexport default connect(mapStateToProps)(Header)\n","import Header from './header'\n\nexport default Header\n","import Footer from './footer'\n\nexport default Footer\n","import React from 'react'\nimport { Divider } from 'antd'\nimport { SmileOutlined } from '@ant-design/icons'\n\nimport './footer.css'\n\nconst Footer = () => (\n    <div className=\"footer\">\n        <Divider className='Footer-divider'><SmileOutlined/>&nbsp; Qiwi Pizza © 2019 </Divider>\n    </div>\n)\n\nexport default Footer\n","import ErrorIndicator from './error-indicator'\n\nexport default ErrorIndicator\n","import React from 'react'\nimport { Button, Result, Row } from 'antd'\n\nimport './error-indicator.css'\n\nconst ErrorIndicator = () => (\n    <Row type='flex' justify='center' align='middle' className='error-indicator'>\n        <Result\n            status='error'\n            title='Critical Error'\n            subTitle='Something has gone terrible wrong! Please reload page! '\n            extra={<a href=\"/\"><Button type=\"primary\">Reload page</Button></a>}\n        />\n    </Row>\n)\n\nexport default ErrorIndicator\n","import { FETCH_PRODUCTS_SUCCESS, FETCH_PRODUCTS_REQUEST, FETCH_PRODUCTS_FAILURE } from '../types'\nimport { clearArrayChooseMenu, fillArrayChooseMenu } from './choose-menu-actions'\n\nconst productsLoaded = (newProducts) => {\n    return {\n        type: FETCH_PRODUCTS_SUCCESS,\n        payload: newProducts\n    }\n}\n\nconst productsRequested = () => {\n    return {\n        type: FETCH_PRODUCTS_REQUEST\n    }\n}\n\nconst productsFetchError = (error) => {\n    return {\n        type: FETCH_PRODUCTS_FAILURE,\n        payload: error\n    }\n}\n\n// 1, - receive data\n// 2. - dispatch action to store\nconst fetchProducts = (productService, dispatch) => () => {\n    dispatch(clearArrayChooseMenu())\n    dispatch(fillArrayChooseMenu())\n    dispatch(productsRequested())\n    productService.getAllSalads()\n        .then((data) => {\n            dispatch(productsLoaded(data))\n        })\n        .catch((err) => {\n            dispatch(productsFetchError(err))\n        })\n}\n\nexport {\n    fetchProducts,\n}\n","import {\n    CLEAR_ARRAY_CHOOSE_MENU,\n    FILL_ARRAY_CHOOSE_MENU,\n    SELECT_QUANTITY_PRODUCT,\n    SELECT_WEIGHT_PRODUCT\n} from '../types'\n\nconst fillArrayChooseMenu = () => {\n    return {\n        type: FILL_ARRAY_CHOOSE_MENU\n    }\n}\n\nconst clearArrayChooseMenu = () => {\n    return {\n        type: CLEAR_ARRAY_CHOOSE_MENU\n    }\n}\n\nconst selectWeightProduct = (menuId, val) => {\n    return {\n        type: SELECT_WEIGHT_PRODUCT,\n        payload: menuId,\n        value: val\n    }\n}\n\nconst selectQuantityProduct = (menuId, val) => {\n    return {\n        type: SELECT_QUANTITY_PRODUCT,\n        payload: menuId,\n        value: val\n    }\n}\n\nexport {\n    fillArrayChooseMenu,\n    clearArrayChooseMenu,\n    selectWeightProduct,\n    selectQuantityProduct\n}\n","export const FETCH_PRODUCTS_SUCCESS = 'FETCH_PRODUCTS_SUCCESS'\nexport const FETCH_PRODUCTS_REQUEST = 'FETCH_PRODUCTS_REQUEST'\nexport const FETCH_PRODUCTS_FAILURE = 'FETCH_PRODUCTS_FAILURE'\n\nexport const FILL_ARRAY_CHOOSE_MENU = 'FILL_ARRAY_CHOOSE_MENU'\nexport const CLEAR_ARRAY_CHOOSE_MENU = 'CLEAR_ARRAY_CHOOSE_MENU'\n\nexport const SELECT_WEIGHT_PRODUCT = 'SELECT_WEIGHT_PRODUCT'\nexport const SELECT_QUANTITY_PRODUCT = 'SELECT_QUANTITY_PRODUCT'\n\nexport const PRODUCT_ADDED_TO_ORDER_LIST = 'PRODUCT_ADDED_TO_ORDER_LIST'\nexport const UPDATE_VALUE_RADIO_BTN_IN_ORDER_LIST = 'UPDATE_VALUE_RADIO_BTN_IN_ORDER_LIST'\n\nexport const UPDATE_COUNT_AND_TOTAL_ORDER = 'UPDATE_COUNT_AND_TOTAL_ORDER'\nexport const PRODUCT_REMOVED_FROM_ORDER_LIST = 'PRODUCT_REMOVED_FROM_ORDER_LIST'\nexport const ALL_PRODUCTS_REMOVED_FROM_ORDER_LIST = 'ALL_PRODUCTS_REMOVED_FROM_ORDER_LIST'\n\n","import ButtonOrderProduct from './button-order-product'\n\nexport default ButtonOrderProduct\n","import React from 'react'\nimport { Button, Col } from 'antd'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCartPlus } from '@fortawesome/free-solid-svg-icons'\n\nconst ButtonOrderProduct = ({ onAddedToList }) => {\n    return (\n        <Col xs={24}>\n            <Button\n                onClick={onAddedToList}\n                type='primary'\n                className='card-list-items--btn'>\n                <FontAwesomeIcon icon={faCartPlus} />&nbsp; В корзину\n            </Button>\n        </Col>\n    )\n}\n\nexport default ButtonOrderProduct\n","import TotalCostProduct from './total-cost-product'\n\nexport default TotalCostProduct\n","import React from 'react'\nimport { Col, Input, Row } from 'antd'\nimport { connect } from 'react-redux'\nimport { productAddedToOrderList } from '../../actions'\nimport ButtonOrderProduct from '../button-order-product'\n\nconst TotalCostProduct = ({ totalId, chooseMenu, onAddedToList }) => {\n    return (\n        <Row type='flex' align='middle'>\n            <Col xs={24}>\n                {\n                    totalId === chooseMenu[totalId].id ?\n                        <Input\n                            addonBefore={(<strong>Итого:</strong>)}\n                            value={`${chooseMenu[totalId].totalCost} грн.`}\n                        />\n                        : null\n                }\n            </Col>\n            <ButtonOrderProduct onAddedToList={() => onAddedToList(totalId)} />\n        </Row>\n    )\n}\n\nconst mapStateToProps = ({productChooseMenu: { chooseMenu }}) => {\n    return {\n        chooseMenu\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onAddedToList: (id) => dispatch(productAddedToOrderList(id))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TotalCostProduct)\n","import {\n    PRODUCT_ADDED_TO_ORDER_LIST, ALL_PRODUCTS_REMOVED_FROM_ORDER_LIST,\n    PRODUCT_REMOVED_FROM_ORDER_LIST, UPDATE_COUNT_AND_TOTAL_ORDER, UPDATE_VALUE_RADIO_BTN_IN_ORDER_LIST\n} from '../types'\n\nconst productAddedToOrderList = (productId) => {\n    return {\n        type: PRODUCT_ADDED_TO_ORDER_LIST,\n        payload: productId\n    }\n}\n\nconst allProductsRemovedFromOrderList = (productId) => {\n    return {\n        type: ALL_PRODUCTS_REMOVED_FROM_ORDER_LIST,\n        payload: productId\n    }\n}\n\nconst productRemovedFromOrderList = (productId) => {\n    return {\n        type: PRODUCT_REMOVED_FROM_ORDER_LIST,\n        payload: productId\n    }\n}\n\nconst updateCountAndTotalOrder = (productId) => {\n    return {\n        type: UPDATE_COUNT_AND_TOTAL_ORDER,\n        payload: productId\n    }\n}\n\nconst updateValueRadioBtnInOrderList = (productId, e) => {\n    return {\n        type: UPDATE_VALUE_RADIO_BTN_IN_ORDER_LIST,\n        payload: productId,\n        event: e\n    }\n}\n\nexport {\n    productAddedToOrderList,\n    allProductsRemovedFromOrderList,\n    productRemovedFromOrderList,\n    updateCountAndTotalOrder,\n    updateValueRadioBtnInOrderList\n}\n","import React, { Fragment } from 'react'\nimport { Col, Select } from 'antd'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBalanceScaleRight } from '@fortawesome/free-solid-svg-icons'\nimport { selectWeightProduct } from '../../actions'\nimport { connect } from 'react-redux'\n\nimport './choose-weight-product.css'\n\nconst { Option } = Select\n\nconst ChooseWeightProduct = ({\n                                 chooseMenu, chooseId, smallCost, smallDesc,\n                                 mediumCost, mediumDesc, largeCost, largeDesc,\n                                 onSelect, oneCost, doubleCost, oneWeight, doubleWeight\n                             }) => {\n\n    const renderChoose = (chooseId) => {\n\n        if (oneCost && doubleCost) {\n            return (\n                <Select defaultValue={chooseMenu[chooseId].selectValue}\n                        onChange={(value) => onSelect(chooseId, value)}\n                        className='choose-weight-product--select'>\n                    <Option value={oneCost}>\n                        <span>{oneCost} грн. - {oneWeight} </span>\n                    </Option>\n                    <Option value={doubleCost}>\n                        <span>{doubleCost} грн. - {doubleWeight} </span>\n                    </Option>\n                </Select>\n            )\n        }\n        return (\n            <Select defaultValue={chooseMenu[chooseId].selectValue}\n                    onChange={(value) => onSelect(chooseId, value)}\n                    className='choose-weight-product--select'>\n                <Option value={smallCost}>\n                    <span>{smallCost} грн. {smallDesc}&nbsp;</span>\n                </Option>\n                <Option value={mediumCost}>\n                    <span>{mediumCost} грн. {mediumDesc}&nbsp;</span>\n                </Option>\n                <Option value={largeCost}>\n                    <span>{largeCost} грн. {largeDesc}&nbsp;</span>\n                </Option>\n            </Select>\n        )\n    }\n\n    return (\n        <Fragment>\n            <Col span={24}>\n                <strong className='choose-weight-product--label'>\n                    <FontAwesomeIcon icon={faBalanceScaleRight} />&nbsp; Выберите вес:\n                </strong>\n            </Col>\n            <Col span={24}>\n                {\n                    chooseId === chooseMenu[chooseId].id ?\n                        renderChoose(chooseId)\n                        : null\n                }\n            </Col>\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = ({ productChooseMenu: { chooseMenu } }) => {\n    return {\n        chooseMenu\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onSelect: (id, val) => {\n            dispatch(selectWeightProduct(id, val))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseWeightProduct)\n","import ChooseWeightProduct from './choose-weight-product'\n\nexport default ChooseWeightProduct\n","import React, { Fragment } from 'react'\nimport { Col, Select } from 'antd'\nimport { connect } from 'react-redux'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\nimport { selectQuantityProduct } from '../../actions'\n\nimport './choose-quantity-product.css'\n\nconst { Option } = Select\n\nconst ChooseQuantityProduct = ({ numbers, chooseMenu, quantityId, onSelectQuantity }) => {\n\n    const renderOption = numbers.map((num) => {\n        return <Option key={num} value={num}>{num}</Option>\n    })\n\n    return (\n        <Fragment>\n            <Col span={24}>\n                <strong className='choose-quantity-product--number--label'>\n                    <FontAwesomeIcon icon={faPlusCircle} />&nbsp; Количество: </strong>\n            </Col>\n            {\n                quantityId === chooseMenu[quantityId].id ?\n                    <Select\n                        defaultValue={0}\n                        value={chooseMenu[quantityId].selectedNumberValue}\n                        className='choose-quantity-product-input--number'\n                        onChange={(value) => onSelectQuantity(quantityId, value)}\n                    >\n                        {renderOption}\n                    </Select> : null\n            }\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = ({ productChooseMenu: { numbers, chooseMenu } }) => {\n    return {\n        numbers,\n        chooseMenu\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onSelectQuantity: (id, val) => {\n            dispatch(selectQuantityProduct(id, val))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseQuantityProduct)\n","import ChooseQuantityProduct from './choose-quantity-product'\n\nexport default ChooseQuantityProduct\n","export default __webpack_public_path__ + \"static/media/no-photo-var2-570px.a2f7b49e.png\";","const compose = (...funcs) => (comp) => {\n    return funcs.reduceRight(\n        (wrapped, f) => f(wrapped), comp)\n}\n\nexport default compose\n","function _transformPizzaAndSalads(item) {\n    return {\n        id: item.id,\n        title: item.title,\n        description: item.description,\n        smallCost: item.smallCost,\n        smallDesc: item.smallDesc,\n        mediumCost: item.mediumCost,\n        mediumDesc: item.mediumDesc,\n        largeCost: item.largeCost,\n        largeDesc: item.largeDesc\n    }\n}\n\nfunction _transformData(item) {\n    return {\n        id: item.id,\n        title: item.title,\n        description: item.description,\n        oneCost: item.oneCost,\n        oneWeight: item.oneWeight,\n        doubleCost: item.doubleCost,\n        doubleWeight: item.doubleWeight,\n    }\n}\n\nexport {\n    _transformPizzaAndSalads,\n    _transformData\n}\n","import { createContext } from 'react'\n\nconst {\n    Provider: ProductServiceProvider,\n    Consumer: ProductServiceConsumer\n} = createContext()\n\nexport {\n    ProductServiceProvider,\n    ProductServiceConsumer\n}\n","import React from 'react'\nimport { ProductServiceConsumer } from '../product-service-context'\n\nconst withProductService = () => (Wrapped) => {\n\n    return (props) => {\n        return (\n            <ProductServiceConsumer>\n                {\n                    (productService) => {\n                        return <Wrapped {...props} productService={productService} />\n                    }\n                }\n            </ProductServiceConsumer>\n        )\n    }\n}\n\nexport default withProductService\n","import React, { Fragment } from 'react'\nimport ErrorIndicator from '../error-indicator'\nimport TotalCostProduct from '../total-cost-product'\nimport ChooseWeightProduct from '../choose-weight-product'\nimport ChooseQuantityProduct from '../choose-quantity-product'\nimport noPhoto from '../../images/no-photo/no-photo-2-var/no-photo-var2-570px.png'\n\nimport { connect } from 'react-redux'\nimport { compose } from '../../utils'\nimport { withProductService } from '../hoc'\nimport { Card, Col, Row, Spin } from 'antd'\nimport { fetchProducts } from '../../actions'\n\nimport './card-list-items.css'\n\nconst { Meta } = Card\n\nclass CardListItems extends React.Component {\n\n    componentDidMount() {\n        this.props.fetchProducts()\n    }\n\n    renderProducts = (arr) =>\n        arr.map(({ id, title, description, smallDesc,\n                     smallCost, mediumDesc, mediumCost,\n                     largeDesc, largeCost, oneCost, doubleCost,\n                     oneWeight, doubleWeight}) => {\n            return (\n                <Col xs={{ span: 20 }} sm={{ span: 9, offset: 1 }} md={{ span: 9, offset: 1 }}\n                     lg={{ span: 6, offset: 1 }}\n                     key={id} className='card-list-items'>\n                    <Card hoverable cover={<img src={noPhoto} alt={title} />}>\n                        <Meta className='card-list-items--description' title='Состав продукта:'\n                              description={description}\n                        />\n                        {\n                            !oneCost ?\n                                <Fragment>\n                                    <Row type='flex' className='card-list-items--choose'>\n                                        <ChooseWeightProduct\n                                            largeCost={largeCost}\n                                            largeDesc={largeDesc} mediumCost={mediumCost}\n                                            mediumDesc={mediumDesc} smallCost={smallCost}\n                                            smallDesc={smallDesc} chooseId={id}\n                                        />\n                                        <ChooseQuantityProduct quantityId={id} />\n                                    </Row>\n                                    <TotalCostProduct totalId={id} />\n                                </Fragment>\n                                :\n                                <Fragment>\n                                    <Row type='flex' className='card-list-items--choose'>\n                                        <ChooseWeightProduct\n                                            oneCost={oneCost} doubleCost={doubleCost}\n                                            oneWeight={oneWeight} doubleWeight={doubleWeight}\n                                            chooseId={id} />\n                                        <ChooseQuantityProduct quantityId={id} />\n                                    </Row>\n                                    <TotalCostProduct totalId={id}/>\n                                </Fragment>\n                        }\n                    </Card>\n                </Col>\n            )\n        })\n\n    render() {\n        const { products, loading, error } = this.props\n\n        if (loading) {\n            return <Spin className='card-list-items--spinner' size='large' />\n        }\n\n        if (error) {\n            return <ErrorIndicator />\n        }\n\n        return (\n            this.renderProducts(products)\n        )\n    }\n}\n\nconst mapStateToProps = ({ productList: { products, loading, error } }) => {\n    return {\n        products,\n        loading,\n        error\n    }\n}\n\nconst mapDispatchToProps = (dispatch, { productService }) => {\n    return { fetchProducts: fetchProducts(productService, dispatch) }\n}\n\nexport default compose(\n    withProductService(),\n    connect(mapStateToProps, mapDispatchToProps)\n)(CardListItems)\n","import CardListItems from './card-list-items'\n\nexport default CardListItems\n","import React from 'react'\nimport { Button, Col, Row, Typography, Radio } from 'antd'\nimport { MinusOutlined, PlusOutlined, DeleteOutlined } from '@ant-design/icons'\nimport { connect } from 'react-redux'\nimport {\n    allProductsRemovedFromOrderList, productRemovedFromOrderList,\n    updateCountAndTotalOrder, updateValueRadioBtnInOrderList\n} from '../../actions'\n\nimport './order-list-products.css'\n\nconst { Title } = Typography\n\nconst OrderListProducts = ({ items, totalPrice, onIncrease, onDecrease, onDeleteAll, onChangeRadio }) => {\n\n    const renderRow = (item, idx) => {\n        const {\n            id, title, count, total, smCount, mdCount,\n            lgCount, smWeight, mdWeight, lgWeight,\n            smPrice, mdPrice, lgPrice, currentValue\n        } = item\n        const { Group } = Radio\n        return (\n            <tr key={id}>\n                <td>{idx + 1}</td>\n                <td>{title}</td>\n                <td>\n                    <Group defaultValue={currentValue} onChange={(e) => onChangeRadio(id, e.target.value)}>\n                        <Radio value={smPrice} disabled={!smCount ? true : null}>{smCount} шт. - {smWeight}</Radio>\n                        <Radio value={mdPrice} disabled={!mdCount ? true : null}>{mdCount} шт. - {mdWeight}</Radio>\n                        <Radio value={lgPrice} disabled={!lgCount ? true : null}>{lgCount} шт. - {lgWeight}</Radio>\n                    </Group>\n                </td>\n                <td>{count}</td>\n                <td>{`${total} грн.`}</td>\n                <td className='order-list-products--btn--action'>\n                    <Button\n                        onClick={() => onDecrease(id)}\n                        type='primary' size='small'><MinusOutlined /></Button>\n                    <Button\n                        onClick={() => onIncrease(id)}\n                        size='small'><PlusOutlined /></Button>\n                    <Button\n                        onClick={() => onDeleteAll(id)}\n                        type='danger' size='small'><DeleteOutlined /></Button>\n                </td>\n            </tr>\n        )\n    }\n\n    return (\n        <Col span={24}>\n            <Row type='flex' align='middle' className='order-list-products'>\n                <Col xs={{ span: 22, offset: 1 }}><Title level={3}>Ваш заказ:</Title></Col>\n                <Col lg={{ span: 22, offset: 1 }}>\n                    <table className='order-list-products--table'>\n                        <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Название</th>\n                            <th>Вес (Кол-во)</th>\n                            <th>Кол-во</th>\n                            <th>Цена</th>\n                            <th>Действия</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {items.map(renderRow)}\n                        </tbody>\n                    </table>\n                </Col>\n                <Col xs={{ span: 22, offset: 1 }}>\n                    <p className='order-list-products--total'><span>Всего: {totalPrice} грн </span></p>\n                </Col>\n            </Row>\n        </Col>\n    )\n}\n\nconst mapStateToProps = ({ orderList: { list, totalPrice } }) => {\n    return {\n        items: list,\n        totalPrice: totalPrice\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onIncrease: (id) => dispatch(updateCountAndTotalOrder(id)),\n        onDecrease: (id) => dispatch(productRemovedFromOrderList(id)),\n        onDeleteAll: (id) => dispatch(allProductsRemovedFromOrderList(id)),\n        onChangeRadio: (id, e)=> dispatch(updateValueRadioBtnInOrderList(id, e))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderListProducts)\n","import OrderListProducts from './order-list-products'\n\nexport default OrderListProducts\n","import CardList from './card-list'\n\nexport default CardList\n","import React from 'react'\nimport { Col, Row } from 'antd'\nimport CardListItems from '../card-list-items'\nimport OrderListProducts from '../order-list-products'\n\nimport './card-list.css'\n\nconst CardList = () => (\n    <Col sm={24} md={{ span: 22, offset: 1 }} lg={{ span: 20, offset: 2 }}\n         className='card-list-wrapper--background'>\n        <Row type='flex' align='middle' justify='center'>\n            <CardListItems />\n        </Row>\n        <Row type='flex' align='middle' justify='center'>\n            <OrderListProducts />\n        </Row>\n    </Col>\n)\n\nexport default CardList\n","import HomePage from './home-page'\n\nexport default  HomePage\n","import React from 'react'\nimport CardList from '../../card-list'\n\nimport './home-page.css'\n\nconst HomePage = () => {\n    return (\n        <CardList />\n    )\n}\n\nexport default HomePage\n","import React, { Fragment, Component } from 'react'\nimport { Col, Typography } from 'antd'\n\nimport './about-page.css'\n\nconst { Title } = Typography\n\nexport default class AboutPage extends Component {\n\n    aboutContet = [\n        {\n            key: '132',\n            level: 1,\n            heading: 'Лучшая доставка пиццы',\n            text: `Австралийская пицца Qiwi Pizza стала легендой благодаря своему изумительному вкусу.\n                В сети кафе Вы можете попробовать не только вкусную пиццу, а еще и багеты, салаты, пообщаться с друзьями, или провести время со своей семьей.\n                Открыто множество кафе «Qiwi Pizza» — Вы можете заглянуть в одно из наших заведений в Киеве.`\n        },\n        {\n            key: '133',\n            level: 2,\n            heading: 'Лучшее место для встреч и посиделок — это пиццерия «Qiwi Pizza»!',\n            text: `Пиццерия «Qiwi Pizza» — это дружелюбное кафе, где можно вкусно поесть после учебы,\n                во время обеденного перерыва на работе, поужинать всей семьей или провести вечер с компанией друзей.\n                У Вас нет времени или сил на готовку? Сделайте заказ онлайн на сайте и наш курьер\n                быстро доставит пиццу еще горячей только из духовки к Вам домой или в офис. Выдался свободный вечер и\n                Вы хотите отдохнуть? Закажите маленькую пиццу на дом и устройте «вечер кино»! Наши курьеры осуществляют\n                адресную доставку по всему Киеву круглосуточно. Если Вы планируете встретиться с коллегами или друзьями — лучшего места, чем наша пиццерия не найти.\n                В каждом кафе нашей сети приятная и дружелюбная атмосфера, здесь можно расслабиться и отдохнуть.\n                В каждом районе столицы есть множество наших пиццерий, чтобы Вы могли всегда быстро, недорого и вкусно поесть.`\n        },\n        {\n            key: '134',\n            level: 2,\n            heading: 'Пицца, салаты, наборы, багеты',\n            text: `Вы делаете заказ и буквально через 10 минут он будет готов.\n                В нашей пиццерии можно заказать готовую пиццу. Главный ингредиент пиццы — это сыр.\n                Традиционно популярна Пепперони с грибами, Четыре сыра, Гавайская, Маргарита, Цезарь и Тоскана.\n                У нас в меню есть еще и сеты, которые включают в себя по\n                3 различных мини пиццы. В меню «Qiwi Pizza» также есть и другие вкусные блюда: салаты; багеты.\n                В наших кафе есть разливное и бутылочное пиво, которое, кстати, отлично сочетается со вкусом пиццы.`\n        },\n        {\n            key: '135',\n            level: 2,\n            heading: '«Qiwi Pizza» — это вкусно, полезно и недорого!',\n            text: ` Секрет популярности пиццерий «Qiwi Pizza» очень прост:\n                Мы готовим исключительно из свежих продуктов — мясо и овощи, нежные сыры.\n                Соусы собственного приготовления делают наши блюда необычайными.\n                Вы можете выбрать, какое тесто хотите — тонкое или обычное.\n                Для приготовления пиццы нужно меньше 12 минут. Вы не успеете оглянуться, как Ваш заказ будет готов.\n                Демократичные цены. Наша пицца по карману всем и каждому. А еще у нас постоянно действуют скидки!\n                Все еще не знаете, где можно вкусно и недорого поесть? Ищите пиццерию «Qiwi Pizza»!`\n        },\n    ]\n\n    renderContent() {\n        return this.aboutContet.map(({ key, level, heading, text }) => {\n            return (\n                <div key={key}>\n                    <Title level={level} key={key} className='about-heading'>{heading}</Title>\n                    <p className=\"about-content\">{text}</p>\n                </div>\n            )\n        })\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Col xs={24} md={{span: 22, offset: 1}} xl={{span: 20, offset: 2}} className=\"about\">\n                    {this.renderContent()}\n                </Col>\n            </Fragment>\n        )\n    }\n}\n","import AboutPage from './about-page'\n\nexport default AboutPage\n","import ContactPage from './contact-page'\n\nexport default ContactPage\n","import React, { Fragment, Component } from 'react'\nimport { Col, Row, Typography, Button } from 'antd'\nimport { FacebookOutlined, InstagramOutlined, MailOutlined, PhoneOutlined } from '@ant-design/icons'\n\nimport './contact-page.css'\n\nexport default class ContactPage extends Component {\n\n    contactInfo = [\n        {\n            key: 100,\n            colSpanXl: { span: 9, offset: 2 },\n            colSpanLg: { span: 10, offset: 2 },\n            colSpanMd: { span: 11, offset: 1 },\n            icon: <PhoneOutlined className=\"contact-content-box__icon\"/>,\n            h4: 'Свяжитесь с call-центром',\n            paragraph: 'Если у Вас возникли вопросы по поводу обслужования просто перезвоните нашему call-центру. Решим Вашу проблему вместе.',\n            link: 'tel:+380682666606',\n            linkLabel: '+38(068) 266-66-06'\n        },\n        {\n            key: 101,\n            colSpanXl: { span: 9, pull: 2 },\n            colSpanLg: { span: 10, pull: 2 },\n            colSpanMd: { span: 11, pull: 1 },\n            icon: <MailOutlined className=\"contact-content-box__icon\"/>,\n            h4: 'Свяжитесь с нами по почте',\n            paragraph: 'Если у Вас есть предложения как улучшить наш сервис по обслуживанию, пишите на почту мы рассмотрим Ваше предложения.',\n            link: 'mailto: qiwipizzaria@ibox.com',\n            linkLabel: 'qiwipizzaria@ibox.com'\n        },\n        {\n            key: 102,\n            colSpanXl: { span: 9, offset: 2 },\n            colSpanLg: { span: 10, offset: 2 },\n            colSpanMd: { span: 11, offset: 1 },\n            icon: <FacebookOutlined className=\"contact-content-box__icon\" />,\n            h4: 'Следите за новостями',\n            paragraph: 'Хотите узнавать первыми о наших новинках, нет проблем, подписуйтесь на наш facebook. Здесь мы вылаживаем актуальную информацию по поводу скидок, новинок и т.д.',\n            link: 'https://www.facebook.com/',\n            linkLabel: 'Перейти'\n        },\n        {\n            key: 103,\n            colSpanXl: { span: 9, pull: 2 },\n            colSpanLg: { span: 10, pull: 2 },\n            colSpanMd: { span: 11, pull: 1 },\n            icon: <InstagramOutlined className=\"contact-content-box__icon\"/>,\n            h4: 'Следите за нами в инстаграм',\n            paragraph: 'Хотите узнавать первыми о наших новинках, нет проблем, подписуйтесь на наш instagram. Здесь мы вылаживаем актуальную информацию по поводу скидок, новинок и т.д.',\n            link: 'https://www.instagram.com/',\n            linkLabel: 'Перейти'\n        }\n    ]\n\n    renderContactBlocks() {\n        return this.contactInfo.map(({ colSpanXl, colSpanLg, colSpanMd, key, icon, h4, paragraph, link, linkLabel }) => {\n            return (\n                <Col xl={colSpanXl} lg={colSpanLg} md={colSpanMd} key={key}>\n                    <div className=\"contact-content__box\">\n\n                        {icon}\n                        <Typography.Title level={4} className=\"contact-content-box__h4\">{h4}</Typography.Title>\n                        <p className=\"contact-content-box__p\">{paragraph}</p>\n                        <Button type=\"link\" className=\"contact-content-box__for__link\"><a href={link} className=\"contact-content-box__tel\" target=\"_blank\" rel=\"noopener noreferrer\">{linkLabel}</a></Button>\n                    </div>\n                </Col>\n            )\n        })\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Col span={24} className=\"contact-page-background\">\n                    <Col span={24} className=\"contact-page-background-picture\">\n                        <Col xs={{ span: 14, offset: 10, pull: 5 }}>\n                            <Row type=\"flex\" align=\"middle\" className=\"contact-page-background-content\">\n                                <Col span={24}><Typography.Title level={2} className=\"contact-page-background-content-h2\">Свяжитесь с нами!</Typography.Title></Col>\n                                <Col span={24}><p className=\"contact-page-background-content-p\">Хотите связаться? Мы хотели бы услышать вас. Вот как\n                            вы можете связаться с нами ...</p></Col>\n                            </Row>\n                        </Col>\n                    </Col>\n                </Col>\n                <Col span={24} className='contact-content'>\n                    <Row type=\"flex\" align=\"middle\" justify='space-between'>\n                        {this.renderContactBlocks()}\n                    </Row>\n                </Col>\n            </Fragment >\n        )\n    }\n}\n","import PageNotFound from './page-not-found'\n\nexport default PageNotFound\n","import React from 'react'\nimport { Button, Result } from 'antd'\nimport { Link } from 'react-router-dom'\n\nimport './page-not-found.css'\n\nconst PageNotFound = () => {\n    return (\n        <Result\n            status=\"404\"\n            title=\"404\"\n            subTitle=\"Sorry, the page you visited does not exist.\"\n            className='page-not-found'\n            extra={<Button type=\"primary\"><Link to=\"/\">Back Home</Link></Button>}\n        />\n    )\n}\n\nexport default PageNotFound\n","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Col, Typography, Divider, Row, Alert, List } from 'antd'\nimport { faWallet, faCreditCard, faMobileAlt } from '@fortawesome/free-solid-svg-icons'\n\nimport './delivery-page.css'\n\nconst { Title } = Typography\n\nexport default class DeliveryPage extends Component {\n\n    deliveryContent = [\n        {\n            key: 1,\n            step: 'Шаг 1-й',\n            infoDescr: '➀ Выберите любимую пиццу и поместите ее в корзину'\n        },\n        {\n            key: 2,\n            step: 'Шаг 2-й',\n            infoDescr: `➁ Нажмите \"Оформить заказ\"`\n        },\n        {\n            key: 3,\n            step: 'Шаг 3-й',\n            infoDescr: `➂ Введите номер телефона и нажмите \"Заказать\"`\n        }\n    ]\n\n    render() {\n        return (\n            <Col xs={24} md={{span: 22, offset:1 }} lg={{span: 20, offset: 2}} className='delivery'>\n                <Row type='flex'>\n                    <Col span={24}>\n                        <div className='delivery-steps--to--order'>\n                            <Title level={2}>Чтобы оформить заказ сделайте 3 простых шага:</Title>\n                            <List\n                                itemLayout=\"horizontal\"\n                                dataSource={this.deliveryContent}\n                                renderItem={item => (\n                                    <List.Item>\n                                        <List.Item.Meta\n                                            title={item.step}\n                                            description={item.infoDescr}\n                                            className='delivery-steps--to--order--item'\n                                        />\n                                    </List.Item>\n                                )}\n                            />\n\n                        </div>\n                    </Col>\n                    <Col xs={{ span: 22, offset: 1 }}>\n                        <Alert message=\"Оператор\"\n                               description=\"Оператор свяжется с вами в течении 5-ти минут и подтвердит заказ. И меньше чем за 60 минут\n                                                горячая, вкусная пицца будет у Вас дома или в офисе.\"\n                               type=\"success\"\n                               className='delivery-alert--operator'\n                               showIcon\n                        />\n                    </Col>\n                    <Col span={24} className='delivery-content--short--info'>\n                        <p>\n                            Сеть пиццерий <i> Qiwi Pizza</i> круглосуточно доставляет заказы по всему Киеву и за пределы\n                            города.\n                            Бесплатная доставка пиццы занимает до <strong>60 минут</strong>, с момента заказа.<strong> Минимальная\n                            сумма\n                            заказа\n                            от\n                            150\n                            грн.</strong>\n                        </p>\n                        <p>\n                            Возможность доставки Вашего заказа за пределы города Киева осуществляется по\n                            предварительному\n                            согласованию с оператором call-центра.\n                        </p>\n                        <p>\n                            <strong>Бесплатная доставка</strong> осуществляется при заказе от <strong>150 грн</strong> в пределах Киева и\n                            от <strong>500 грн </strong>\n                            за\n                            пределы\n                            Киева.\n                        </p>\n                    </Col>\n                    <Col xs={{ span: 22, offset: 1 }}>\n                        <Divider className='delivery-content--how-to-pay'>Как можно оплатить заказ?</Divider>\n                    </Col>\n                    <Col xs={{ span: 22, offset: 1 }} lg={{ span: 6, offset: 2 }}>\n                        <div className='delivery-content--how-to-pay--block delivery-content--how-to-pay--block--blue'>\n                            <FontAwesomeIcon icon={faWallet}\n                                             className='delivery-content--how-to-pay--block--icon' />&nbsp;\n                            <p className='delivery-content--how-to-pay--block--p'> - Наличными курьеру</p>\n                        </div>\n                    </Col>\n                    <Col xs={{ span: 22, offset: 1 }} lg={{ span: 6, offset: 1 }}>\n                        <div className='delivery-content--how-to-pay--block delivery-content--how-to-pay--block--green'>\n                            <FontAwesomeIcon icon={faCreditCard}\n                                             className='delivery-content--how-to-pay--block--icon' />&nbsp;\n                            <p className='delivery-content--how-to-pay--block--p'> - Карточкой курьеру</p>\n                        </div>\n                    </Col>\n                    <Col xs={{ span: 22, offset: 1 }} lg={{ span: 6 }}>\n                        <div\n                            className='delivery-content--how-to-pay--block delivery-content--how-to-pay--block--purple'>\n                            <FontAwesomeIcon icon={faMobileAlt}\n                                             className='delivery-content--how-to-pay--block--icon' />&nbsp;\n                            <p className='delivery-content--how-to-pay--block--p'> - Онлайн на сайте</p>\n                        </div>\n                    </Col>\n                    <Col xs={{ span: 22, offset: 1 }} className='delivery-content--info--about--fail--order'>\n                        <Alert message=\"Обратите внимание!\"\n                               description={`В случае, если ваши планы поменялись и вы желаете отказаться от заказа - просим Вас сообщить об этом, оператору, по телефону 044 266 66 06, но не позже чем спустя 10 минут после подтверждение заказа оператором.`}\n                               type=\"info\"\n                               showIcon\n                        />\n                    </Col>\n                    <Col xs={{ span: 22, offset: 1 }}>\n                        <Divider className='delivery-content--technology--payment'>Технология безналичной\n                            оплаты</Divider>\n                    </Col>\n                    <Col xs={{ span: 22, offset: 1 }}>\n                        <Title level={2} className='delivery-content--technology--save--payment--h2'> Безопасность\n                            платежей по картам Visa и MasterCard на нашем сайте:</Title>\n                    </Col>\n                    <Col span={24} className='delivery-content--technology--save--payment--info'>\n                        <p>\n                            Наш сайт <strong>Qiwi Pizza</strong> подключён к системе <b>безопасных электронных платежей</b> ПриватБанка, которая\n                            позволяет\n                            оплачивать наши услуги по любым картам Visa и MasterCard, выпущенных любыми зарубежными\n                            банками.\n                            Система безопасных электронных платежей реализована на самом современном стандарте\n                            безопасности\n                            - 3D\n                            Secure, который обеспечит максимальную безопасность Ваших платежей в Интернет.\n                        </p>\n                        <p>\n                            <strong>Технология 3D Secure является частью глобальных программ Visa \"Verified by Visa\" и\n                                MasterCard\n                                «MAsterCardSecureCode»</strong>, целью которых является предоставление и обеспечение\n                            безопасных и\n                            надежных\n                            методов оплаты товаров и услуг в глобальной сети Интернет.\n                        </p>\n                        <p>\n                            Более 15 миллионов держателей карт Visa по всему миру являются активными пользователями\n                            услуги\n                            Verified by Visa при совершении покупок в Интернете. Сегодня стандарт 3-D Secure Систему\n                            поддерживают более 100 тысяч Интернет-магазинов и более 20 тысяч банков по всему миру.\n                        </p>\n                        <p>\n                            Заботясь о предоставлении нашим клиентам наиболее прогрессивных элементов\n                            онлайн-безопасности,\n                            мы\n                            внедрили этот стандарт и на нашем сайте. <strong> Оплата по картам Visa и MasterCard теперь\n                            максимально\n                            безопасны!</strong>\n                        </p>\n                    </Col>\n                </Row>\n            </Col>\n        )\n    }\n}\n","import DeliveryPage from './delivery-page'\n\nexport default DeliveryPage\n","import App from './app'\n\nexport default App\n","import React, { Fragment } from 'react'\nimport { Row } from 'antd'\nimport { Switch, Route } from 'react-router-dom'\n\nimport Header from '../header'\nimport Footer from '../footer'\nimport Home from '../pages/home-page'\nimport About from '../pages/about-page'\nimport Contact from '../pages/contact-page'\nimport PageNotFound from '../pages/404-page'\nimport Delivery from '../pages/delivery-page'\n\nimport './app.css'\n\nconst App = () => {\n    return (\n        <Fragment>\n            <Header />\n            <Row className=\"app-content\">\n                <Switch>\n                    <Route path={'/'} exact component={Home} />\n                    <Route path={'/about'} component={About} />\n                    <Route path={'/contact'} component={Contact} />\n                    <Route path={'/delivery'} component={Delivery} />\n                    <Route render={() => <PageNotFound />} />\n                </Switch>\n            </Row>\n            <Footer />\n        </Fragment>\n    )\n}\n\nexport default App\n","import ErrorBoundary from './error-boundary'\n\nexport default ErrorBoundary\n","import React, { Component } from 'react'\nimport ErrorIndicator from '../error-indicator'\n\nexport default class ErrorBoundary extends Component {\n\n    state = {\n        hasError: false\n    }\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({\n            hasError: true\n        })\n    }\n\n    render() {\n        const { hasError } = this.state\n\n        if (hasError) {\n            return <ErrorIndicator />\n        }\n\n        return (\n            this.props.children\n        )\n    }\n}\n","const _pizza = [\n    {\n        id: 0,\n        img_full: 'static/img/pizza-img/pizza-img-full-size/burger-pizza-bg.png',\n        img: '../../images/content-home-page/pizza-img/no-photo-small.jpg',\n        title: 'Бургер Пицца',\n        description: 'Фирменный соус, говяжий фарш, сыр моцарелла, маринованные огурчики, помидор',\n        smallCost: 108,\n        smallDesc: '(330г.)',\n        mediumCost: 145,\n        mediumDesc: '(610г.)',\n        largeCost: 200,\n        largeDesc: '(880г.)'\n    },\n    {\n        id: 1,\n        img_full: 'static/img/pizza-img/pizza-img-full-size/kurinaya-pizza-bg.png',\n        img: '../../images/content-home-page/pizza-img/no-photo-small.jpg',\n        title: 'Куриная',\n        description: 'Цезарь соус, сыр моцарелла, куриное филе, помидоры, сладкий перец, шампиньоны',\n        smallCost: 98,\n        smallDesc: '(330г.)',\n        mediumCost: 147,\n        mediumDesc: '(610г.)',\n        largeCost: 199,\n        largeDesc: '(880г.)'\n    },\n    {\n        id: 2,\n        img_full: 'static/img/pizza-img/pizza-img-full-size/masnaya-pizza-bg.png',\n        img: '../../images/content-home-page/pizza-img/no-photo-small.jpg',\n        title: 'Мясная ',\n        description: 'Соус пилати, бекон, помидоры, сыр моцарелла, сладкий перец, говядина, ветчина, пепперони',\n        smallCost: 115,\n        smallDesc: '(330г.)',\n        mediumCost: 151,\n        mediumDesc: '(610г.)',\n        largeCost: 213,\n        largeDesc: '(880г.)'\n    },\n    {\n        id: 3,\n        img_full: 'static/img/pizza-img/pizza-img-full-size/barbeku-pizza-bg.png',\n        img: '../../images/content-home-page/pizza-img/no-photo-small.jpg',\n        title: 'Барбекю-Мясная',\n        description: 'Соус барбекю, говядина, сыр моцарелла, курица, сладкий перец, помидор',\n        smallCost: 90,\n        smallDesc: '(330г.)',\n        mediumCost: 142,\n        mediumDesc: '(610г.)',\n        largeCost: 189,\n        largeDesc: '(880г.)'\n    },\n    {\n        id: 4,\n        img_full: 'static/img/pizza-img/pizza-img-full-size/chili-pizza-bg.png',\n        img: '../../images/content-home-page/pizza-img/no-photo-small.jpg',\n        title: 'Чили',\n        description: 'Соус пилати, сыр моцарелла, говядина, маслины, халапеньо, колбаски пепперони',\n        smallCost: 120,\n        smallDesc: '(330г.)',\n        mediumCost: 190,\n        mediumDesc: '(610г.)',\n        largeCost: 240,\n        largeDesc: '(880г.)'\n    },\n    {\n        id: 5,\n        img_full: 'static/img/pizza-img/pizza-img-full-size/4-cheese-pizza-bg.png',\n        img: '../../images/content-home-page/pizza-img/no-photo-small.jpg',\n        title: 'Четыре сыра',\n        description: 'Соус пилати, сыры: пармезан, маасдам, дор-блю, моцарелла',\n        smallCost: 96,\n        smallDesc: '(330г.)',\n        mediumCost: 185,\n        mediumDesc: '(610г.)',\n        largeCost: 215,\n        largeDesc: '(880г.)'\n    },\n    {\n        id: 6,\n        img_full: 'static/img/pizza-img/pizza-img-full-size/gribnaya-pizza-bg.png',\n        img: '../../images/content-home-page/pizza-img/no-photo-small.jpg',\n        title: 'Грибная',\n        description: 'Цезарь соус, сыр моцарелла, чеснок, помидоры, шампиньоны',\n        smallCost: 133,\n        smallDesc: '(330г.)',\n        mediumCost: 195,\n        mediumDesc: '(610г.)',\n        largeCost: 246,\n        largeDesc: '(880г.)'\n    },\n    {\n        id: 7,\n        img_full: 'static/img/pizza-img/pizza-img-full-size/peperonyy-pizza-bg.png',\n        img: '../../images/content-home-page/pizza-img/no-photo-small.jpg',\n        title: 'Пепперони',\n        description: 'Соус пилати, сыр моцарелла, сладкий перец, шампиньоны, колбаски пепперони',\n        smallCost: 140,\n        smallDesc: '(330г.)',\n        mediumCost: 205,\n        mediumDesc: '(610г.)',\n        largeCost: 268,\n        largeDesc: '(880г.)'\n    },\n    {\n        id: 8,\n        img_full: 'static/img/pizza-img/pizza-img-full-size/gavayskaya-pizza-bg.png',\n        img: '../../images/content-home-page/pizza-img/no-photo-small.jpg',\n        title: 'Гавайская',\n        description: 'Соус пилати, сыр моцарелла, ветчина, ананас',\n        smallCost: 115,\n        smallDesc: '(330г.)',\n        mediumCost: 187,\n        mediumDesc: '(610г.)',\n        largeCost: 253,\n        largeDesc: '(880г.)'\n    }\n]\n\nconst _salads = [\n    {\n        id: 0,\n        img: 'static/img/salads-img/salads-img-size-for-card/with-telyatina-salad-bg-card.png',\n        title: 'С телятиной',\n        description: 'Телятина, помидор, перец, лук крымский, салат, пекинская капуста',\n        smallCost: 42,\n        smallDesc: '(150г.)',\n        mediumCost: 78,\n        mediumDesc: '(215г.)',\n        largeCost: 98,\n        largeDesc: '(300г.)'\n    },\n    {\n        id: 1,\n        img: 'static/img/salads-img/salads-img-size-for-card/with-semga-salad-bg-card.png',\n        title: 'С семгой',\n        description: 'Салат, помидор, огурец, семга, кунжут, соус унаги',\n        smallCost: 49,\n        smallDesc: '(150г.)',\n        mediumCost: 83,\n        mediumDesc: '(215г.)',\n        largeCost: 106,\n        largeDesc: '(300г.)'\n    },\n    {\n        id: 2,\n        img: 'static/img/salads-img/salads-img-size-for-card/grecheskiy-salad-bg-card.png',\n        title: 'Греческий',\n        description: 'Салат, маслины, сыр \"Фета\", помидор, огурец, перец, масло оливковое',\n        smallCost: 38,\n        smallDesc: '(150г.)',\n        mediumCost: 60,\n        mediumDesc: '(215г.)',\n        largeCost: 89,\n        largeDesc: '(300г.)'\n    },\n    {\n        id: 3,\n        img: 'static/img/salads-img/salads-img-size-for-card/tsezar-with-chicken-salad-bg-card.png',\n        title: 'Цезарь с курицой',\n        description: 'Салат, пекинская капуста, помидор, курица, соус',\n        smallCost: 27,\n        smallDesc: '(150г.)',\n        mediumCost: 45,\n        mediumDesc: '(215г.)',\n        largeCost: 64,\n        largeDesc: '(300г.)'\n    },\n    {\n        id: 4,\n        img: 'static/img/salads-img/salads-img-size-for-card/ovoschnoj-salad-bg-card.png',\n        title: 'Овощной',\n        description: 'Перец, помидор, огурец, салат, пекинская капуста',\n        smallCost: 21,\n        smallDesc: '(150г.)',\n        mediumCost: 37,\n        mediumDesc: '(215г.)',\n        largeCost: 59,\n        largeDesc: '(300г.)'\n    }\n]\n\nconst _combination = [\n    {\n        id: 0,\n        img: 'static/img/set-of-img/set-of-img-size-for-card/set-of-number-1-bg-card.png',\n        title: 'Пицца сэт №1',\n        description: 'Мини Пицца \"Грибная\", мини Пицца \"Чили\", мини Пицца \"Мясная\"',\n        oneCost: 356,\n        oneWeight: '990г.',\n        doubleCost: 712,\n        doubleWeight: '1980г.',\n    },\n    {\n        id: 1,\n        img: 'static/img/set-of-img/set-of-img-size-for-card/set-of-number-2-bg-card.png',\n        title: 'Пицца сэт №2',\n        description: 'Мини Пицца \"Гавайская\", мини Пицца \"Барбекю-Мясная\", мини Пицца \"Четыре сыра\"',\n        oneCost: 270,\n        oneWeight: '990г.',\n        doubleCost: 540,\n        doubleWeight: '1980г.',\n    },\n    {\n        id: 2,\n        img: 'static/img/set-of-img/set-of-img-size-for-card/set-of-number-3-bg-card.png',\n        title: 'Пицца сэт №3',\n        description: 'Мини Пицца \"Пепперони\", мини Пицца \"Бургер Пицца\", мини Пицца \"Куриная\"',\n        oneCost: 325,\n        oneWeight: '990г.',\n        doubleCost: 650,\n        doubleWeight: '1980г.'\n    }\n]\n\nconst _buggets = [\n    {\n        id: 0,\n        img: 'static/img/buggets-img/buggets-img-size-for-card/with-chiken-bugget-bg-card.png',\n        title: 'С курицей',\n        description: 'Багет, майонез, салат айсберг, сыр, помидоры, огурцы маринованные, филе курицы гриль',\n        oneCost: 28,\n        oneWeight: '230г.',\n        doubleCost: 56,\n        doubleWeight: '460г.'\n    },\n    {\n        id: 1,\n        img: 'static/img/buggets-img/buggets-img-size-for-card/with-buzhenina-bugget-bg-card.png',\n        title: 'С бужениной',\n        description: 'Багет, буженина, сыр, кукуруза, помидор, майонез горчица.',\n        oneCost: 30,\n        oneWeight: '210г.',\n        doubleCost: 60,\n        doubleWeight: '410г.'\n    },\n    {\n        id: 2,\n        img: 'static/img/buggets-img/buggets-img-size-for-card/with-vetchina-bugget-bg-card.png',\n        title: 'С ветчиной',\n        description: 'Багет, майонез, сыр, ветчина, зелень, базилик',\n        oneCost: 43,\n        oneWeight: '310г.',\n        doubleCost: 86,\n        doubleWeight: '610г.'\n    },\n    {\n        id: 3,\n        img: 'static/img/buggets-img/buggets-img-size-for-card/with-cheese-and-tomato-bugget-bg-card.png',\n        title: 'С сыром и помидорами',\n        description: 'Багет, помидоры, сыр, зелень, майонез',\n        oneCost: 27,\n        oneWeight: '200г.',\n        doubleCost: 54,\n        doubleWeight: '400г.'\n    },\n    {\n        id: 4,\n        img: 'static/img/buggets-img/buggets-img-size-for-card/with-cheese-and-garlic-bugget-bg-card.png',\n        title: 'С чесноком и сыром',\n        description: 'Багет, сыр, чеснок, масло, зелень, специи',\n        oneCost: 28,\n        oneWeight: '215г.',\n        doubleCost: 56,\n        doubleWeight: '430г.'\n    },\n    {\n        id: 5,\n        img: 'static/img/buggets-img/buggets-img-size-for-card/with-cheese-and-bacon-bugget-bg-card.png',\n        title: 'С беконом и сыром',\n        description: 'Багет, майонез, твердый сыр, бекон, зеленый лук',\n        oneCost: 32,\n        oneWeight: '250г.',\n        doubleCost: 64,\n        doubleWeight: '500г.'\n    }\n]\n\nexport {\n    _pizza,\n    _salads,\n    _buggets,\n    _combination\n}\n","import { FETCH_PRODUCTS_REQUEST, FETCH_PRODUCTS_SUCCESS, FETCH_PRODUCTS_FAILURE } from '../types'\n\nconst updateProductList = (state, action) => {\n    if (state === undefined) {\n        return {\n            products: [],\n            loading: true,\n            error: null\n        }\n    }\n\n    switch (action.type) {\n    case FETCH_PRODUCTS_REQUEST:\n        return {\n            products: [],\n            loading: true,\n            error: null\n        }\n    case FETCH_PRODUCTS_SUCCESS:\n        return {\n            products: action.payload,\n            loading: false,\n            error: null\n        }\n\n    case FETCH_PRODUCTS_FAILURE:\n        return {\n            products: [],\n            loading: false,\n            error: action.payload\n        }\n    default:\n        return state.productList\n    }\n}\n\n\nexport default updateProductList\n","import { CLEAR_ARRAY_CHOOSE_MENU, FILL_ARRAY_CHOOSE_MENU, SELECT_QUANTITY_PRODUCT, SELECT_WEIGHT_PRODUCT } from '../types'\n\nconst generateChooseMenu = (arrayLength) => {\n    let filledArray = new Array(arrayLength)\n\n    for (let i = 0; i < arrayLength; i++) {\n        filledArray[i] = {\n            id: i,\n            selectedNumberValue: 0,\n            totalCost: 0,\n            defaultCost: 0,\n            selectValue: 'Выберите...'\n        }\n    }\n\n    return filledArray\n}\n\nconst updateSelect = (state, action) => {\n    const chooseId = action.payload\n    const menuIndex = state.productChooseMenu.chooseMenu.findIndex(({ id }) => id === chooseId)\n    const menuItem = state.productChooseMenu.chooseMenu[menuIndex]\n\n    let newItem\n\n    if (action.type === SELECT_WEIGHT_PRODUCT) {\n        newItem = {\n            ...menuItem,\n            selectedNumberValue: 1,\n            totalCost: action.value,\n            defaultCost: action.value\n        }\n    } else {\n        newItem = {\n            ...menuItem,\n            selectedNumberValue: action.value,\n            totalCost: menuItem.defaultCost * action.value\n        }\n    }\n\n    return [\n        ...state.productChooseMenu.chooseMenu.slice(0, menuIndex),\n        newItem,\n        ...state.productChooseMenu.chooseMenu.slice(menuIndex + 1)\n    ]\n}\n\nconst updateProductChooseMenu = (state, action) => {\n    if (state === undefined) {\n        return {\n            chooseMenu: [],\n            numbers: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]\n        }\n    }\n\n    switch (action.type) {\n    case CLEAR_ARRAY_CHOOSE_MENU:\n        return {\n            ...state.productChooseMenu,\n            chooseMenu: []\n        }\n\n    case FILL_ARRAY_CHOOSE_MENU:\n        return {\n            ...state.productChooseMenu,\n            chooseMenu: generateChooseMenu(15)\n        }\n    case SELECT_QUANTITY_PRODUCT:\n\n        return {\n            ...state.productChooseMenu,\n            chooseMenu: updateSelect(state, action)\n        }\n\n    case SELECT_WEIGHT_PRODUCT:\n\n        return {\n            ...state.productChooseMenu,\n            chooseMenu: updateSelect(state, action)\n        }\n\n    default:\n        return state.productChooseMenu\n    }\n}\n\nexport default updateProductChooseMenu\n","const updateList = (list, item, idx) => {\n    if (item.count === 0) {\n        return [\n            ...list.slice(0, idx),\n            ...list.slice(idx + 1)\n        ]\n    }\n\n    if (idx === -1) {\n        return [\n            ...list,\n            item\n        ]\n    }\n\n    return [\n        ...list.slice(0, idx),\n        item,\n        ...list.slice(idx + 1)\n    ]\n}\n\nexport default updateList\n","import updateList from './update-list'\n\nconst updateTotal = (orderList, countCost, newItem, itemIndex) => {\n    if (orderList.list.length > 0) {\n\n        const newTotal = orderList.list.reduce(function (prevVal, curVal) {\n                return {\n                    total: prevVal.total + curVal.total,\n                    count: prevVal.count + curVal.count\n                }\n            }\n        )\n        return {\n            totalItems: newTotal.count + countCost.selectedNumberValue,\n            totalPrice: newTotal.total + countCost.totalCost,\n            list: updateList(orderList.list, newItem, itemIndex)\n        }\n    } else {\n        return {\n            list: updateList(orderList.list, newItem, itemIndex),\n            totalPrice: countCost.totalCost,\n            totalItems: countCost.selectedNumberValue,\n        }\n    }\n}\n\nexport default updateTotal\n","import updateTotal from './update-total'\n\nconst updateListItem = (product, countProducts, item) => {\n    const defCost = countProducts.defaultCost\n    const selNumVal = countProducts.selectedNumberValue\n    const totalCost = countProducts.totalCost\n\n    const { smallCost, mediumCost, largeCost, oneCost, doubleCost} = product\n\n    if (item) {\n        return {\n            ...item,\n            smCount: defCost === smallCost || defCost === oneCost ? item.smCount + selNumVal : item.smCount,\n            mdCount: defCost === mediumCost || defCost === doubleCost ? item.mdCount + selNumVal: item.mdCount,\n            lgCount: defCost === largeCost ? item.lgCount + selNumVal : item.lgCount,\n            count: item.count + selNumVal,\n            total: item.total + totalCost\n        }\n    } else {\n        return {\n            id: product.id,\n            title: product.title,\n            count: selNumVal,\n            total: totalCost,\n            currentValue: defCost,\n            smPrice: smallCost || oneCost,\n            mdPrice: mediumCost || doubleCost,\n            lgPrice: largeCost || 0,\n            smWeight: product.smallDesc || product.oneWeight,\n            mdWeight: product.mediumDesc || product.doubleWeight,\n            lgWeight: product.largeDesc || 0,\n            smCount: defCost === smallCost || defCost === oneCost ? selNumVal : 0,\n            mdCount: defCost === mediumCost || defCost === doubleCost ? selNumVal : 0,\n            lgCount: defCost === largeCost ? selNumVal : 0\n        }\n    }\n}\n\nconst addProductToList = (state, productId) => {\n    const { productList: { products }, productChooseMenu: { chooseMenu }, orderList: { list } } = state\n\n    const product = products.find(({ id }) => id === productId)\n    const countAndCost = chooseMenu.find(({ id }) => id === productId)\n\n    if (!countAndCost.defaultCost) {\n        return {\n            ...state.orderList\n        }\n    } else {\n        const itemIndex = list.findIndex(({ id }) => id === productId)\n        const item = list[itemIndex]\n\n        const newItem = updateListItem(product, countAndCost, item)\n\n        return updateTotal(state.orderList, countAndCost, newItem, itemIndex)\n    }\n}\n\nexport default addProductToList\n","import updateList from './update-list'\n\nconst updateValueRadioBtnInList = (orderList, listId, radioEvent) => {\n    const itemIndex = orderList.list.findIndex(({ id }) => id === listId)\n    const item = orderList.list[itemIndex]\n\n    const newItem = {\n        ...item,\n        currentValue: radioEvent\n    }\n\n    return {\n        ...orderList,\n        list: updateList(orderList.list, newItem, itemIndex)\n    }\n}\n\n\nexport default updateValueRadioBtnInList\n","import updateList from './update-list'\n\nconst updateCountAndTotalInList = (orderList, fieldId, quantity) => {\n    const itemIndex = orderList.list.findIndex(({ id }) => id === fieldId)\n    const item = orderList.list[itemIndex]\n\n    let newItem\n\n    if (item.currentValue === item.smPrice && item.smCount > 0) {\n        newItem = {\n            ...item,\n            smCount: item.smCount + quantity,\n            count: item.count + quantity,\n            total: item.total + item.currentValue * quantity\n        }\n\n    } else if (item.currentValue === item.mdPrice && item.mdCount > 0) {\n        newItem = {\n            ...item,\n            mdCount: item.mdCount + quantity,\n            count: item.count + quantity,\n            total: item.total + item.currentValue * quantity\n        }\n\n    } else if (item.currentValue === item.lgPrice && item.lgCount > 0) {\n        newItem = {\n            ...item,\n            lgCount: item.lgCount + quantity,\n            count: item.count + quantity,\n            total: item.total + item.currentValue * quantity\n        }\n    } else {\n        return {\n            ...orderList\n        }\n    }\n\n    return {\n        list: updateList(orderList.list, newItem, itemIndex),\n        totalPrice: orderList.totalPrice + item.currentValue * quantity,\n        totalItems: orderList.totalItems + quantity\n    }\n}\n\nexport {\n    updateCountAndTotalInList\n}\n","import updateList from './update-list'\n\nconst removeProductFromList = (state, productId) => {\n    const { list, totalPrice, totalItems } = state\n\n    const itemIndex = list.findIndex(({ id }) => id === productId)\n    const item = list[itemIndex]\n\n    const newItem = {\n        ...item,\n        smCount: item.smCount - item.smCount,\n        mdCount: item.mdCount - item.mdCount,\n        lgCount: item.lgCount - item.lgCount,\n        count: item.count - item.count\n    }\n\n    return {\n        totalItems: totalItems - item.count,\n        totalPrice: totalPrice - item.total,\n        list: updateList(list, newItem, itemIndex),\n    }\n}\n\nexport default removeProductFromList\n","import {\n    ALL_PRODUCTS_REMOVED_FROM_ORDER_LIST, PRODUCT_ADDED_TO_ORDER_LIST,\n    PRODUCT_REMOVED_FROM_ORDER_LIST, UPDATE_COUNT_AND_TOTAL_ORDER,\n    UPDATE_VALUE_RADIO_BTN_IN_ORDER_LIST\n} from '../../types'\nimport addProductToList from './update-order-list-products'\nimport updateValueRadioBtnInList from './update-value-radio-btn-in-list'\nimport { updateCountAndTotalInList } from './update-count-and-total-in-list'\nimport removeProductFromList from './remove-product-from-list'\n\nconst updateProductOrderList = (state, action) => {\n\n    if (state === undefined) {\n        return {\n            list: [],\n            totalPrice: 0,\n            totalItems: 0\n        }\n    }\n\n    switch (action.type) {\n    case PRODUCT_ADDED_TO_ORDER_LIST:\n        return addProductToList(state, action.payload)\n\n    case UPDATE_VALUE_RADIO_BTN_IN_ORDER_LIST:\n        return updateValueRadioBtnInList(state.orderList, action.payload, action.event)\n\n    case UPDATE_COUNT_AND_TOTAL_ORDER:\n        return updateCountAndTotalInList(state.orderList, action.payload, 1)\n\n    case PRODUCT_REMOVED_FROM_ORDER_LIST:\n        return updateCountAndTotalInList(state.orderList, action.payload, -1)\n\n    case ALL_PRODUCTS_REMOVED_FROM_ORDER_LIST:\n        return removeProductFromList(state.orderList, action.payload)\n    default:\n        return state.orderList\n    }\n}\n\nexport default updateProductOrderList\n","import updateProductList from './product-reducer'\nimport updateProductChooseMenu from './choose-menu-reducer'\nimport updateProductOrderList from './order-list/order-list-reducer'\n\nconst Reducer = (state, action) => {\n    return {\n        productList: updateProductList(state, action),\n        productChooseMenu: updateProductChooseMenu(state, action),\n        orderList: updateProductOrderList(state, action)\n    }\n}\n\nexport default Reducer\n\n","import { createStore } from 'redux'\nimport Reducer from './reducers'\n\nconst store = createStore(Reducer)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/app'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport ErrorBoundary from './components/error-boundary'\nimport { ProductServiceProvider } from './components/product-service-context'\nimport ProductService from './services/product-service'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nconst productService = new ProductService()\n\nReactDOM.render(\n    <Provider store={store}>\n        <ErrorBoundary>\n            <ProductServiceProvider value={productService}>\n                <Router>\n                    <App />\n                </Router>\n            </ProductServiceProvider>\n        </ErrorBoundary>\n    </Provider>,\n    document.getElementById('root'))\n","import { _pizza, _salads, _combination, _buggets } from './data-products/data'\nimport { _transformPizzaAndSalads, _transformData } from '../utils'\n\nexport default class ProductService {\n\n    /*getResource = async (url) => {\n        const res = await fetch(`${this._apiBase}${url}`)\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, result status: ${res.status}`)\n        }\n\n        return res.json()\n    }*/\n\n    createPromiseProducts = (data, methodProcessing) => {\n        return new Promise((resolve) => {\n                setTimeout(\n                    () => {\n                        resolve(data.map(methodProcessing))\n                    }, 500)\n            }\n        )\n    }\n\n    createPromiseProduct = (data) => {\n        return new Promise(\n            (resolve) => {\n                setTimeout(\n                    () => {\n                        resolve(data)\n                        /*reject(new Error(`Fail: product isn't received from server!!`))*/\n                    }, 500)\n            }\n        )\n    }\n\n    getAllPizza = () => {\n        return this.createPromiseProducts(_pizza, _transformPizzaAndSalads)\n    }\n\n    getPizza = (id) => {\n        return this.createPromiseProduct(_pizza[id])\n    }\n\n    getAllSalads = () => {\n        return this.createPromiseProducts(_salads, _transformPizzaAndSalads)\n    }\n\n    getSalad = (id) => {\n        return this.createPromiseProduct(_salads[id])\n    }\n\n    getAllCombination = () => {\n        return this.createPromiseProducts(_combination, _transformData)\n    }\n\n    getCombination = (id) => {\n        return this.createPromiseProduct(_combination[id])\n    }\n\n    getAllBuggets = () => {\n        return this.createPromiseProducts(_buggets, _transformData)\n    }\n\n    getBugget = (id) => {\n        return this.createPromiseProduct(_buggets[id])\n    }\n}\n\n"],"sourceRoot":""}